# ┌───────────────────────────────────────────────────────────────┐
# │ Contents of from_tag_to_build_release_pypi.yml                │
# ├───────────────────────────────────────────────────────────────┘
# │
# ├──┐From tag
# │  └──┐Build and test
# │     ├── Release to GitHub
# │     ├── Deploy to PyPI
# │     └── Deploy to AUR
# │
# └───────────────────────────────────────────────────────────────

# ################################################################ From tag

name: Create GitHub release and deploy to PyPI from a new tag

# requirements:
# - GitHub has an environment called "release"
# - PyPI has a trusted publisher set from https://pypi.org/manage/account/publishing/
# - no need for secret PyPI token


# debug:
#   git push --delete origin v1.1.0 && git tag --delete v1.1.0
#   git -a && git commit --amend
#   git push --force
#   git tag v1.1.0 && git push --tags

on:
  push:
    tags:
      - 'v*'

jobs:

# ################################ Build and test

  build:
    name: Build package
    environment: production
    runs-on: ubuntu-latest
    # needed to push commit to repo
    permissions:
      contents: write
    outputs:
      changelog: ${{ steps.changelog.outputs.content }}
    steps:

      - name: Access source code
        uses: actions/checkout@v4
        # needed to list changes
        with:
          fetch-depth: 0
          token: ${{ github.token }}

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Install package and python dependencies
        run: uv sync --all-groups

      - name: Store partial changelog for release notes
        id: changelog
        uses: orhun/git-cliff-action@v4.5.1
        with:
          config: pyproject.toml
          args: -vv --latest --strip all
        env:
          OUTPUT: CHANGELOG-PARTIAL.md

      - name: Build package
        run: uv build

      - name: Store package
        uses: actions/upload-artifact@v4
        with:
          name: python-dist
          path: dist

# ################ Release to GitHub

  release:
    name: Release to GitHub
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:

      - name: Access package
        uses: actions/download-artifact@v4
        with:
          name: python-dist
          path: dist

      # https://raw.githubusercontent.com/orhun/git-cliff/main/.github/workflows/cd.yml
      - name: Create release
        uses: softprops/action-gh-release@v2
        with:
          name: Rusticlone ${{ github.ref_name }}
          body: ${{ needs.build.outputs.changelog }} 
          draft: false
          token: ${{ github.token }}
          fail_on_unmatched_files: true
          files: dist/*.whl

# ################ Deploy to PyPI

  pypi:
    name: Deploy to PyPI
    needs: build
    runs-on: ubuntu-latest
    environment: release
    permissions:
      id-token: write
    steps:

      - name: Access package
        uses: actions/download-artifact@v4
        with:
          name: python-dist
          path: dist

      - name: Deploy package
        uses: pypa/gh-action-pypi-publish@v1

# ################ Deploy to AUR

  aur:
    name: Deploy to AUR
    needs: pypi
    runs-on: ubuntu-latest
    steps:

      - name: Wait for the new release to be accessible from PyPI
        run: sleep 10

      - name: Update PKGBUILD
        uses: aksh1618/update-aur-package@v1
        with:
          tag_version_prefix: v
          package_name: rusticlone
          commit_username: "Github Action"
          commit_email: alphajack@aur.arch
          ssh_private_key: ${{ secrets.AUR_SSH_PRIVATE_KEY }}